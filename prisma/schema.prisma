

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model User{
  id String @id @unique
  email String
  firstname String
  lastname String
  profileImage String? //optional
  Home Home[]
  favourite Favourite[]
  reservation Reservation[]
}



//One to many relationship
model Home{
  id String @id @default(uuid())
  title String?
  description String?
  guests String?
  bedrooms String?
  bathrooms String?
  country String?
  photo String?
  price Int?
  categoryName String?
  favourite Favourite[] 
  reservation Reservation[]

  addedCategory Boolean @default(false)
  addedDescription Boolean @default(false)
  addedLocation Boolean @default(false)

  createdAt DateTime @default(now())
  User User? @relation(fields: [userId], references: [id])
  userId String?
}

model Favourite{
  id String @id @default(uuid())
  homeId String?
  Home Home? @relation(fields: [homeId], references: [id])
  userId String?
  User User? @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  // to add features later on it seems but I'm not sure

}
// User can have many favourites, but each favourite can can have only one user{basiclly if i set it to favourite it will be favourite for that user only, only other set it they can see it for themself} 

//Home can have many favourites, but each favourite can have only one home{basiclly if i set it to favourite it will be favourite for that home only, only other set it they can see it for themself}

model Reservation{
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  startDate DateTime
  endDate DateTime
  homeId String?
  Home Home? @relation(fields: [homeId], references: [id])
  userId String?
  User User? @relation(fields: [userId], references: [id])  
  // to add features later on it seems but I'm not sure
}